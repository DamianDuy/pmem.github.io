The **BTT** algorithm provides single block powerfail write atomicity
on top of persistent memory.  This allows PMem to emulate storage and
provide similar semantics to NVMe.
NVMe storage requires at least
one block powerfail write atomicity, meaning a block being written
during a power failure will either be fully written or not written at
all.  Since software may depend on this attribute of storage, the BTT
algorithm was designed to implement the same semantics in software.  The
algorithm was standardized as part of [UEFI](https://uefi.org).

For an introduction on how BTT works, shorter than reading the full
specification, see [this blog](https://pmem.io/2014/09/23/btt.html),
written by the Linux maintainer of its BTT implementation, Vishal Verma.
